name: Build artifacts

on:
  # release:
  #   types: [published]
  push:
    tags:
      - '*.*.*'

  workflow_dispatch:

jobs:
  build-static:
    runs-on: ubuntu-latest
    container: clojure:lein
    steps:
      - uses: actions/checkout@v2
      - name: install os deps
        run: |
          apt-get -qq update && apt-get -qy install rpm fakeroot
      - name: install lein deps
        run: |
          lein install
      - name: install nvm
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
      - name: install node.js
        run: |
          export NVM_DIR=$HOME/.nvm && . "$NVM_DIR/nvm.sh" && nvm install v19.6.1
      - name: get node deps
        run: |
          export NVM_DIR=$HOME/.nvm && . "$NVM_DIR/nvm.sh" && npm install
      - name: pre-fetch state (1)
        run: |
          export NVM_DIR=$HOME/.nvm && . "$NVM_DIR/nvm.sh" && lein cljsbuild once prerender-state
      - name: pre-fetch state (2)
        run: |
          export NVM_DIR=$HOME/.nvm && . "$NVM_DIR/nvm.sh" && node target/cljsbuild/prerender-state/main.js
      - name: transpile app (cljs->js)
        run: |
          lein prod
      - name: transpile (static) prerender script (cljs->js)
        run: |
          export NVM_DIR=$HOME/.nvm && . "$NVM_DIR/nvm.sh" && lein cljsbuild once prerender
      - name: run (static) prerender scipt (js->html)
        # NB: this one is only manily useful in our use-case for retrieving "app.js" under "target/cljsbuild"
        run: |
          export NVM_DIR=$HOME/.nvm && . "$NVM_DIR/nvm.sh" && node target/cljsbuild/prerender/main.js --mode dir --dest-dir target/cljsbuild/prod-static/public/
      - name: make archive - js builder script
        run: |
          tar -czvf static-js-builder-${{ github.ref_name }}.tar.gz target/cljsbuild/prerender/
      - name: make archive - js builder script (unversioned)
        run: |
          tar -czvf static-js-builder.tar.gz target/cljsbuild/prerender/ target/cljsbuild/prod-static/public/js/compiled/app.js
      - name: make archive - static site
        run: |
          tar -czvf static-${{ github.ref_name }}.tar.gz -C target/cljsbuild/prod-static/public/ .
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.ref_name }}
          path: |
            ./*.tar.gz
      - name: Release
        uses: softprops/action-gh-release@v1
        # if: ${{ github.event.release.tag_name }}
        with:
          name: ${{ github.ref_name }}
          # draft: true
          files: ./*.tar.gz
